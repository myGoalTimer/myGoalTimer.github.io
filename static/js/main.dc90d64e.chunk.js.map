{"version":3,"sources":["logo.svg","localStorage.js","store/goalTimerReducer.js","store/actionTypes.js","store/store.js","GoalTimer.js","store/actions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","loadState","serializedState","localStorage","getItem","JSON","parse","error","initialState","moneyNeeded","moneyIGot","moneyInput","laptop","anzahlung","aufenthalt","etc","check","reducer","state","action","type","parseInt","input","persistedState","moneyStore","createStore","daysLeftHeader","color","fontSize","marginTop","borderBottom","paddingBottom","moneyContainer","width","outline","border","borderLeft","borderRight","fontWeight","moneyHeader","goalHeaderRed","goalHeaderGreen","background","weekHeader","checkStyle","margin","checkButtonStyle","height","borderRadius","connect","dispatch","addMoney","changeMoneyInput","e","laptop_check","anzahlung_check","aufenthalt_check","etc_check","checked","props","today","Date","date1","getDate","getMonth","getFullYear","date2","date3","diffDays","diffDays2","console","log","style","className","onChange","target","value","onClick","for","defaultChecked","name","goelTimerStyle","backgroundColor","overflowX","subscribe","stringify","setItem","saveState","getState","App","store","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dc90d64e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const loadState = () => {\r\n    try{\r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState == null){\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (error){\r\n        return undefined;\r\n    }\r\n}\r\n\r\n\r\nexport const saveState = (state) => {\r\n    try{\r\n        const serializedState =  JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n","import {ADD_MONEY} from './actionTypes';\r\nimport {CHANGE_MONEY_INPUT} from './actionTypes';\r\nimport {LAPTOP} from './actionTypes';\r\nimport {ANZAHLUNG} from './actionTypes';\r\nimport {AUFENTHALT} from './actionTypes';\r\nimport {ETC} from './actionTypes';\r\nimport {CHECK} from './actionTypes';\r\nimport  {loadState, saveState} from '../localStorage'\r\n\r\n\r\nconst persistedState = loadState();\r\n\r\nconst initialState =  {\r\n    moneyNeeded: 5000,\r\n    moneyIGot: 0,\r\n    moneyInput: 0,\r\n    laptop: false,\r\n    anzahlung: false,\r\n    aufenthalt: false,\r\n    etc: false,\r\n    check: [false, false, false, false],\r\n}\r\n\r\nfunction reducer (state = initialState, action){\r\n    switch (action.type) {\r\n        case ADD_MONEY : return {\r\n            ...state,\r\n            moneyIGot: (state.moneyIGot + parseInt(state.moneyInput)),\r\n            moneyInput: 0,\r\n        }\r\n        case CHANGE_MONEY_INPUT: return {\r\n            ...state,\r\n            moneyInput: action.input,\r\n        }\r\n\r\n        case LAPTOP: return {\r\n            ...state,\r\n            laptop: !state.laptop,\r\n        }\r\n\r\n        case ANZAHLUNG: return {\r\n            ...state,\r\n            anzahlung: !state.anzahlung,\r\n        }\r\n\r\n        case AUFENTHALT: return {\r\n            ...state,\r\n            aufenthalt: !state.aufenthalt,\r\n        }\r\n\r\n        case ETC: return {\r\n            ...state,\r\n            etc: !state.etc,\r\n        }\r\n\r\n        case CHECK: return {\r\n            ...state,\r\n            check: [state.laptop, state.anzahlung, state.aufenthalt, state.etc],\r\n        }\r\n\r\n        default:\r\n          return{\r\n            ...state  \r\n          } \r\n        \r\n    }      \r\n}\r\n\r\nexport default reducer;","const ADD_MONEY = \"ADD_MONEY\";\r\nconst CHANGE_MONEY_INPUT = \"CHANGE_MONEY_INPUT\";\r\nconst LAPTOP = \"LAPTOP\";\r\nconst ANZAHLUNG = \"ANZAHLUNG\";\r\nconst AUFENTHALT = \"AUFENTHALT\";\r\nconst ETC = \"ETC\";\r\nconst CHECK = \"CHECK\";\r\n\r\n\r\nexport { ADD_MONEY };\r\nexport { CHANGE_MONEY_INPUT };\r\nexport {LAPTOP};\r\nexport {ANZAHLUNG};\r\nexport {AUFENTHALT};\r\nexport {ETC};\r\nexport {CHECK};","import {createStore} from 'redux';\r\nimport reducer from './goalTimerReducer';\r\nimport  {loadState, saveState} from '../localStorage'\r\n\r\n\r\n\r\nconst persistedState = loadState();\r\n\r\n\r\nconst moneyStore = createStore(reducer,  persistedState);\r\n\r\nexport default moneyStore;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { render } from '@testing-library/react';\r\nimport {addMoney} from './store/actions';\r\nimport {changeMoneyInput} from './store/actions';\r\nimport {laptop_check} from './store/actions';\r\nimport {anzahlung_check} from './store/actions';\r\nimport {aufenthalt_check} from './store/actions';\r\nimport {etc_check}  from './store/actions';\r\nimport {checked}  from './store/actions';\r\nimport {connect} from 'react-redux'\r\nimport moneyStore  from './store/store';\r\n\r\n\r\n\r\n\r\nconst daysLeftHeader = {\r\n    color: \"white\",\r\n    fontSize: \"80px\",\r\n    marginTop: \"0px\",\r\n    borderBottom: \"2px solid white\",\r\n    paddingBottom: \"10px\",\r\n}\r\n\r\nconst moneyContainer = {\r\n   width: \"400px\", \r\n   outline: \"none \",\r\n   border: \"2px solid white\",\r\n   borderLeft:  \"none\",\r\n   borderRight: \"none\",\r\n   fontWeight: \"bold\", \r\n   marginTop: \"30px\",\r\n}\r\n\r\nconst moneyHeader = {\r\n    color: \"white\",\r\n    fontSize: \"30px\",\r\n    marginTop: \"20px\",\r\n    border: \"1px solid white\",\r\n    \r\n}\r\n\r\nconst goalHeaderRed = {\r\n    color: \"white\",\r\n    fontSize: \"30px\",\r\n    marginTop: \"20px\",\r\n    border: \"1px solid white\",\r\n}\r\n\r\nconst goalHeaderGreen = {\r\n    color: \"white\",\r\n    fontSize: \"30px\",\r\n    marginTop: \"20px\",\r\n    border: \"1px solid white\",\r\n    background: \"#66ff66\" \r\n}\r\n\r\n\r\nconst weekHeader = {\r\n    color: \"white\",\r\n    fontSize: \"40px\",\r\n    marginTop: \"20px\",\r\n    borderBottom: \"2px solid white\",\r\n    paddingBottom: \"20px\"\r\n}\r\n\r\n\r\nconst checkStyle = {\r\n    color: \"white\",\r\n    fontSize: \"18px\",\r\n    margin: \"5px\", \r\n \r\n}\r\n\r\nconst checkButtonStyle = {\r\n    width: \"15px\",\r\n    height: \"15px\",\r\n    borderRadius: \"10px\",\r\n    margin: \"3px\",\r\n}\r\n\r\n\r\nfunction MoneyForm(props) {\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n\r\n    var mm = today.getMonth()+1; \r\n    var yyyy = today.getFullYear();\r\n    var date1 = new Date(); //\"now\"\r\n    var date2 = new Date(\"04/19/2021\")\r\n    var date3 = new Date(\"03/1/2021\")\r\n    var diffDays = parseInt((date2 - date1) / (1000 * 60 * 60 * 24), 10); \r\n    var diffDays2 = parseInt((date3 - date1) / (1000 * 60 * 60 * 24 * 7), 10); \r\n    \r\n  console.log(props.check) \r\n\r\n    return(\r\n        /*###################################################################################\r\n          ------------------------------------ MONEY-----------------------------------\r\n          ###################################################################################*/\r\n        \r\n        <div  style={moneyContainer} className=\"d-flex flex-column\">\r\n            <h1 style = {daysLeftHeader}>{diffDays} Tage</h1>\r\n            <h6  style = {weekHeader}>{diffDays2} Wochen</h6>  \r\n            <h5  style={moneyHeader} className=\"m-3 p-2\">Ziel: {props.moneyNeeded}€</h5>\r\n            <h5  style={moneyHeader} className=\"m-3 p-2\">Aktuell: {props.moneyIGot}€</h5> \r\n            <h5  style={moneyHeader} className=\"m-3 p-2\">Bis zum Ziel: {props.moneyNeeded - props.moneyIGot}€</h5> \r\n            <form>\r\n              <input type=\"text\" onChange = { (e) => props.changeMoneyInput(e.target.value)}></input>\r\n              <button type = \"submit\" onClick = {props.addMoney} className=\"m-1 \">Oh Yeah</button>\r\n            </form>\r\n\r\n            {/* ###################################################################################\r\n          ------------------------------------ PRE GOALS -----------------------------------\r\n          #######################################################################################*/}\r\n\r\n            <div style={moneyContainer} className=\"\">\r\n              <h5 style = {props.check[0] ? goalHeaderGreen : goalHeaderRed} className=\"m-3 p-2\">Laptop ~ 1000€</h5>\r\n              <h5 style = {props.check[1]  ? goalHeaderGreen : goalHeaderRed}   className=\"m-3 p-2\">Anzahlung {'->'} 2000€</h5> \r\n              <h5 style = {props.check[2]  ? goalHeaderGreen : goalHeaderRed}  className=\"m-3 p-2\">Aufenthalt ~ 1200€</h5> \r\n              <h5 style = {props.check[3]  ? goalHeaderGreen : goalHeaderRed}   className=\"m-3 p-2\">ETC ~ 500€</h5>   \r\n            </div>\r\n         \r\n            {/* ###################################################################################\r\n          ------------------------------------ CHECK CHECK -----------------------------------\r\n          #######################################################################################*/}\r\n         \r\n            <div className=\"d-flex flex-column\">\r\n               <form>\r\n                  <div >\r\n                    <label style={checkStyle} for = \"Laptop\">Laptop</label>\r\n                    <input style = {checkButtonStyle} type=\"checkbox\" defaultChecked = {props.laptop} onChange = {props.laptop_check} name=\"Laptop\"></input>\r\n                    <label style={checkStyle} for = \"Anzahlung\">Anzahlung</label>\r\n                    <input style = {checkButtonStyle} type=\"checkbox\" defaultChecked = {props.anzahlung} onChange = {props.anzahlung_check}  name=\"Anzahlung\"></input>\r\n                    <label style={checkStyle} for = \"Aufentshalt\">Aufenhalt</label>\r\n                    <input style = {checkButtonStyle} type=\"checkbox\" defaultChecked = {props.aufenthalt} onChange = {props.aufenthalt_check}   name=\"Aufenthalt\"></input>\r\n                    <label style={checkStyle} for = \"ETC\">ETC</label>\r\n                    <input style = {checkButtonStyle} type=\"checkbox\" defaultChecked = {props.etc} onChange = {props.etc_check}   name=\"ETC\"></input>\r\n                    <button  type=\"submit\" onClick = {props.checked}  >Check Check!</button> \r\n                   </div>\r\n               </form>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    moneyIGot: state.moneyIGot,\r\n    moneyNeeded: state.moneyNeeded,\r\n    moneyInput: state.moneyInput,\r\n    laptop:  state.laptop,\r\n    anzahlung: state.anzahlung,\r\n    aufenthalt: state.aufenthalt,\r\n    etc: state.etc,\r\n    check: state.check\r\n  }\r\n}\r\n\r\n\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      addMoney: () => dispatch(addMoney()),\r\n      changeMoneyInput: (e) => dispatch(changeMoneyInput(e)),\r\n      laptop_check: () => dispatch(laptop_check()),\r\n      anzahlung_check: () => dispatch(anzahlung_check()),\r\n      aufenthalt_check: () => dispatch(aufenthalt_check()),\r\n      etc_check: () => dispatch(etc_check()),\r\n      checked: () => dispatch(checked())\r\n     }\r\n  }\r\n  \r\n export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MoneyForm)\r\n  \r\n\r\n\r\n\r\n\r\nexport {MoneyForm};\r\n","import {ADD_MONEY} from './actionTypes';\r\nimport {CHANGE_MONEY_INPUT} from './actionTypes';\r\nimport {LAPTOP} from './actionTypes';\r\nimport {ANZAHLUNG} from './actionTypes';\r\nimport {AUFENTHALT} from './actionTypes';\r\nimport {ETC} from './actionTypes';\r\nimport {CHECK} from './actionTypes';\r\n\r\n\r\nconst addMoney = () => {\r\n    return {\r\n        type: ADD_MONEY,\r\n    }\r\n}\r\n\r\nconst changeMoneyInput = (input) =>{\r\n    return {\r\n        type: CHANGE_MONEY_INPUT,\r\n        input\r\n    }\r\n}\r\n\r\nconst laptop_check = () => {\r\n    return {\r\n        type: LAPTOP,\r\n    }\r\n}\r\n\r\nconst anzahlung_check = () =>{\r\n    return {\r\n        type: ANZAHLUNG,\r\n    }\r\n}\r\n\r\nconst aufenthalt_check = () =>{\r\n    return {\r\n        type: AUFENTHALT,\r\n    }\r\n}\r\n\r\nconst etc_check = () => {\r\n    return {\r\n        type: ETC,\r\n    }\r\n}\r\n\r\nconst checked = () => {\r\n    return {\r\n        type: CHECK,\r\n    }\r\n}\r\n\r\nexport {addMoney};\r\nexport {changeMoneyInput};\r\nexport {laptop_check}\r\nexport {anzahlung_check}\r\nexport {aufenthalt_check}\r\nexport {etc_check}\r\nexport {checked}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport moneyStore  from './store/store';\nimport {Provider} from 'react-redux'\nimport  {loadState, saveState} from './localStorage'\nimport MoneyForm from './GoalTimer';\n\n\nconst goelTimerStyle = {\n  backgroundColor: \"#ff4d4d\",\n  border: \"1px solid #ff4d4d\",\n  height: \"200vh\",\n  overflowX: \"hidden\",\n}\n\nconst heightStyle = {\n  width: \"1000px\"\n}\n\nconst persistedState = loadState();\nmoneyStore.subscribe(() => {\n  saveState(moneyStore.getState())\n})\n\n\n\nfunction App() {\n  return (\n    <Provider store = {moneyStore}>\n        <div className=\"App text-center\">\n          {/* ###################################################################################\n          ------------------------------------ GOAL TIMER APP -----------------------------------\n          #######################################################################################*/}\n          <div style={goelTimerStyle} className=\"\">\n              <div className=\"row justify-content-center align-items-center\">\n                <MoneyForm/>\n              </div>\n            </div>\n        </div>  \n          {/*......................................................................................*/}\n      </Provider> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}